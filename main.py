import telebot                              
from keyboard import *

                        
TOKEN = "5343039631:AAE7AXTAvO2dVr5gFNwgAwp1yB0SKGAYFNY"
bot = telebot.TeleBot(TOKEN)
cat = "‚¨áÔ∏è–û–±–µ—Ä—ñ—Ç—å –ö–∞—Ç–µ–≥–æ—Ä—ñ—é‚¨áÔ∏è :"


@bot.message_handler(commands="start")
def start(message):

    
    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ–≥–æ –¥–Ω—è,{0.first_name}üëã\nüîç–û–±–µ—Ä—ñ—Ç—å –ì—Ä–æ–º–∞–¥—É üè° :".format(
                         message.from_user), reply_markup=city_markup)


@bot.message_handler(content_types=["text"])
def text(message):
    if message.chat.type == "private":
        if any(message.text == city["name"] for city in cities):
            variable(message)
def variable(message):
    bot.send_message(message.from_user.id,cat,reply_markup=cat_markup)
    bot.register_next_step_handler(message,cate)
    
def cate(message):
    if message.text in [cats['name'] for cats in cat_menu]: 
        if message.text == "‚Ü©–ü–û–í–ï–†–ù–£–¢–ò–°–¨":
            start(message)
            return 
        elif message.text == "üéì–û–°–í–Ü–¢–ê":
            sub_variants = get_sub_variants(message.text)
            education_markup = ReplyKeyboardMarkup(resize_keyboard=True).add(*[KeyboardButton(sub_e['name']) for sub_e in sub_variants])
            bot.send_message(message.from_user.id,text="–û–±–µ—Ä—ñ—Ç—å:",reply_markup=education_markup)
            bot.register_next_step_handler(message,educat)
        elif message.text == "‚ù§–ú–ï–î–ò–¶–ò–ù–ê":
            bot.send_message(message.from_user.id,text="–û–±–µ—Ä—ñ—Ç—å:",reply_markup=medic_markup)
            bot.register_next_step_handler(message,medic)
        elif message.text == "üëµ–ü–ï–ù–°–Ü–Ø":
            bot.send_message(message.from_user.id,text="–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è:")
            bot.register_next_step_handler(message,cate)
        elif message.text == "üíê–í–ü–û":
            bot.send_message(message.from_user.id,text="–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è:")
            bot.register_next_step_handler(message,cate)
        elif message.text == "üôè–ì–£–ú–ê–ù–Ü–¢–ê–†–ö–ê":
            bot.send_message(message.from_user.id,text="–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è:")
            bot.register_next_step_handler(message,cate)
        elif message.text == "üíÜ–ü–°–ò–•–û–õ–û–ì":
            bot.send_message(message.from_user.id,text="–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è:")
            bot.register_next_step_handler(message,cate)
        elif message.text == "üíº–†–û–ë–û–¢–ê":
            bot.send_message(message.from_user.id,text="–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è:")
            bot.register_next_step_handler(message,cate)
        elif message.text == "üè¢–¶–ù–ê–ü":
            bot.send_message(message.from_user.id,text="–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è:")
            bot.register_next_step_handler(message,cate)
    else:
        start(message)
        return
      
def educat(message):
    sub_variants = [sub_variant['name'] for sub_variant in  get_sub_variants(message.text)]
    print(sub_variants)
    if message.text in sub_variants:

            bot.send_message(message.from_user.id,text="–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è:")
            bot.register_next_step_handler(message,educat)
            
    else:
        start(message)
        return
        
def medic(message):
    if message.text in medic_but:
        if message.text == "üöë–ü–ï–†–í–ò–ù–ö–ê": 
            bot.send_message(message.from_user.id,text="–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è:")
            bot.register_next_step_handler(message,medic)
        elif message.text == "üíä–í–¢–û–†–ò–ù–ö–ê":
            bot.send_message(message.from_user.id,text="–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è:")
            bot.register_next_step_handler(message,medic)
        elif message.text == "‚Ü©–ü–û–í–ï–†–ù–£–¢–ò–°–¨":
            variable(message)
            return
    else:
        start(message)
        return
    


bot.polling(non_stop=True,timeout=150)
